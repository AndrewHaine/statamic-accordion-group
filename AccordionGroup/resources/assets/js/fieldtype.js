!function(e){var i={};function n(t){if(i[t])return i[t].exports;var s=i[t]={i:t,l:!1,exports:{}};return e[t].call(s.exports,s,s.exports,n),s.l=!0,s.exports}n.m=e,n.c=i,n.d=function(e,i,t){n.o(e,i)||Object.defineProperty(e,i,{configurable:!1,enumerable:!0,get:t})},n.n=function(e){var i=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(i,"a",i),i},n.o=function(e,i){return Object.prototype.hasOwnProperty.call(e,i)},n.p="/",n(n.s=0)}([function(e,i,n){e.exports=n(1)},function(e,i,n){Vue.component("accordion_group-fieldtype",n(2))},function(e,i,n){var t,s,l={};t=n(3),s=n(4),e.exports=t||{},e.exports.__esModule&&(e.exports=e.exports.default);var a="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;s&&(a.template=s),a.computed||(a.computed={}),Object.keys(l).forEach(function(e){var i=l[e];a.computed[e]=function(){return i}})},function(e,i,n){"use strict";Object.defineProperty(i,"__esModule",{value:!0});var t=function(){function e(e,i){for(var n=0;n<i.length;n++){var t=i[n];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(e,t.key,t)}}return function(i,n,t){return n&&e(i.prototype,n),t&&e(i,t),i}}();var s=function(){function e(i){!function(e,i){if(!(e instanceof i))throw new TypeError("Cannot call a class as a function")}(this,e),this.fieldset=i,this.name=i.name,this.sections=this.parseSections(i.sections),this.metaFields=[]}return t(e,[{key:"parseSections",value:function(e){var i=this;return _.chain(e).mapObject(function(e,n){return e.handle=n,e.fields=i.parseFields(e.fields),e}).values().value()}},{key:"parseFields",value:function(e){return _.chain(e).mapObject(function(e,i){return e.name=i,e}).values().value()}},{key:"fields",value:function(){return _.chain(this.sections).pluck("fields").flatten().value()}}]),e}();i.default={mixins:[Fieldtype],props:["data","config","name"],created:function(){var e=this;this.$http.get(cp_url("fieldsets-json/"+this.config.child_fieldset)).success(function(i){var n=new s(i);e.fieldset=n,e.child_fields=n.fields(),e.loading=!1,e.bindChangeWatcher()})},data:function(){return{autoBindChangeWatcher:!1,child_fields:[],fieldset:{},isOpen:!1,loading:!0}},methods:{handleClick:function(e){this.loading||(this.isOpen=!this.isOpen)},componentName:function(e){return e.replace(".","-")+"-fieldtype"},fieldClasses:function(e){return["form-group","px-3 py-2",e.type+"-fieldtype",tailwind_width_class(e.width),e.classes||""]}}}},function(e,i){e.exports=' <section class=accordion-field v-bind:class="{ \'accordion-field--open\': isOpen }"> <div v-on:click=handleClick class="accordion-field__header no-select clickable"> <div v-if=config.child_fieldset> <div v-if=loading class="loading loading-basic"> <span class="icon icon-circular-graph animation-spin"></span> {{ translate(\'cp.loading\') }} </div> <div v-else> <span class=accordion-field__title>{{ config.display }}</span> <small v-if=config.instructions v-html="config.instructions | markdown" class=accordion-field__instruct></small> </div> </div> <div v-else> <div class="loading loading-basic red"> <span class="icon icon-block"></span> No fieldset has been set for this group. </div> </div> </div> <div class=accordion-field__body v-bind:class="{ \'invisible\': !isOpen }"> <div v-if=child_fields.length class="accordion-field__fieldset publish-fields"> <div v-for="field in child_fields" :class=fieldClasses(field) :key=field.name> <div class=field-inner> <div v-if=isReadOnly class=read-only-overlay :title="translate(\'cp.read_only\')"></div> <label class=block :class="{\'bold\': field.bold}"> <template v-if=field.display>{{ field.display }}</template> <template v-if=!field.display>{{ field.name | deslugify | titleize }}</template> <i class=required v-if=field.required>*</i> </label> <small class=help-block v-if=field.instructions v-html="field.instructions | markdown"></small> <component :is=componentName(field.type) :name="name + \'.\' + field.name" :config=field :data.sync=data[field.name]></component> </div> </div> </div> </div> </section> '}]);